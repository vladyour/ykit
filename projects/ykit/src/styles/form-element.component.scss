@use 'border.component';
@use 'box.component';
@use 'drop-down';

$formElementConfig: (
    "maxWidth": 350px,
    "errorColorName": "danger",
    "boxConfig": box.$boxConfig,
    "focusBorderConfig": (
        "radius": 5px,
        "width": 1px,
        "colorName": "info",
        "transparency": 0
    ),
    "valueConfig": (
        "fontSize": 13px,
        "fontColor": "black"
    ),
    "labelConfig": (
        "fontSize": 12px
    ),
    "messageConfig": (
        "fontSize": 11px
    )
);

@mixin formElement($formElementConfig, $colorSchema) {
  ykit-form-element {
    display: block;
    vertical-align: top;
    max-width: map-get($formElementConfig, "maxWidth");
    input, ykit-select {
      display: block;
      background: transparent;
      box-sizing: border-box;

      $boxConfig: map-get($formElementConfig, "boxConfig");
      @include box.boxStyle($boxConfig, $colorSchema);

      $valueConfig: map-get($formElementConfig, "valueConfig");
      $valueFontSize: map-get($valueConfig, "fontSize");
      font-size: $valueFontSize;

      width: 100%;

      &:focus {
        $focusBorderConfig: map-get($formElementConfig, "focusBorderConfig");
        @include border.borderStyle($focusBorderConfig, $colorSchema);
      }

      outline: none;
    }

    ykit-select {
      cursor: pointer;
      position: relative;

      ykit-select-options {
        cursor: default;
        width: 100%;

        $background: map-get($colorSchema, "background");
        background: $background;

        $focusBorderConfig: map-get($formElementConfig, "focusBorderConfig");
        @include border.borderStyle($focusBorderConfig, $colorSchema);
        @include drop-down.dropDown();
        box-sizing: border-box;

        ykit-select-option {
          display: block;
          padding: 5px 10px;
          cursor: pointer;
          box-sizing: border-box;

          &:hover {
            $hoveredBackground: darken($background, 5%);
            background: $hoveredBackground;
          }

          &.selected {
            $background: map-get($colorSchema, "primary");
            background: lighten(desaturate($background, 10%), 30%);
          }
        }
      }

      .ykit-select {
        display: flex;
        flex-direction: row;
        flex-wrap: nowrap;
        justify-content: space-between;

        .ykit-select_no-value {
          font-style: italic;
          font-size: 12px;

          $color: map-get($colorSchema, map-get(map-get($formElementConfig, "valueConfig"), "fontColor"));
          color: transparentize($color, 0.3);
        }

        .ykit-select_icons {
          user-select: none;
          .ykit-select_reset {
            padding: 2px 4px;

            &:hover {
              $dangerColor: map-get($colorSchema, "danger");
              color: $dangerColor;
            }
          }
          .ykit-select_chevron {
            padding: 2px 4px;
          }
        }
      }
    }

    .ykit-form-label-wrapper, .ykit-form-message-wrapper {
      display: block;
      min-height: 1.3em;
      padding: 1px 5px;
    }

    .ykit-form-label-wrapper {
      $messageConfig: map-get($formElementConfig, "labelConfig");
      font-size: map-get($messageConfig, "fontSize");
      font-weight: 600;
    }

    .ykit-form-message-wrapper {
      $messageConfig: map-get($formElementConfig, "messageConfig");
      font-size: map-get($messageConfig, "fontSize");
    }

    &.error {
      $color: map-get($colorSchema, map-get($formElementConfig, "errorColorName"));
      color: $color;

      input {
        border-color: $color;
      }
    }
  }
}